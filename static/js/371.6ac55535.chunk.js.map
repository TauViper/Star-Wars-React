{"version":3,"file":"static/js/371.6ac55535.chunk.js","mappings":"uNACA,EAA0B,gCAA1B,EAA4E,wCAA5E,EAAiI,mCAAjI,EAAoL,sCAApL,EAAwO,oCAAxO,EAA0R,oC,SCG7QA,EAAiB,SAAH,GAA4B,IAAtBC,EAAc,EAAdA,eAC/B,GAAkCC,EAAAA,EAAAA,UAAS,IAAG,eAAvCC,EAAS,KAAEC,EAAY,KAY9B,OAXAC,EAAAA,EAAAA,YAAU,YACR,uBAAC,mFAMa,OANb,KAMCD,EAAY,UAAOE,EAAAA,EAAAA,GAAgBL,GAAe,4EANpD,EAQF,GAAG,CAACA,KAGF,gBAAKM,UAAWC,EAAc,UAC5B,eAAID,UAAWC,EAAsB,SAClCL,EACEM,MAAK,SAACC,EAAGC,GAAC,OAAKD,EAAEE,WAAaD,EAAEC,UAAU,IAC1CC,KAAI,gBAAGC,EAAK,EAALA,MAAOF,EAAU,EAAVA,WAAU,OACvB,gBAAIL,UAAWC,EAAiB,WAC9B,kBAAMD,UAAWC,EAAoB,qBAAUI,MAC/C,iBAAML,UAAWC,EAAkB,gBACnC,iBAAMD,UAAWC,EAAkB,SAAEM,MAHDF,EAIjC,OAKjB,C","sources":["webpack://star_wars_web/./src/components/CharacterPageComponent/CharacterFilms/CharacterFilms.module.css?7dc7","components/CharacterPageComponent/CharacterFilms/CharacterFilms.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"CharacterFilms_wrapper__YNCL5\",\"list__container\":\"CharacterFilms_list__container__82L3-\",\"list__item\":\"CharacterFilms_list__item__2LOq7\",\"item__episode\":\"CharacterFilms_item__episode__jYLrX\",\"item__colon\":\"CharacterFilms_item__colon__35qim\",\"item__title\":\"CharacterFilms_item__title__9-w+E\"};","import React, { useEffect, useState } from 'react';\nimport { conCurrentFilms } from 'utils/network';\nimport style from './CharacterFilms.module.css';\n\nexport const CharacterFilms = ({ characterFilms }) => {\n  const [filmsName, setFilmsName] = useState([]);\n  useEffect(() => {\n    (async () => {\n      /**\n       * conCurrentFilms - функция из network.js для прохода по ссылкам и получения результата в json\n       * characterFilms - массив полученных url из запроса setCharacterFilms(res.films)\n       * setFilmsName - получаем массив списка фильмов после запроса данных по url\n       */\n      setFilmsName(await conCurrentFilms(characterFilms));\n    })();\n  }, [characterFilms]);\n\n  return (\n    <div className={style.wrapper}>\n      <ul className={style.list__container}>\n        {filmsName\n          .sort((a, b) => a.episode_id - b.episode_id)\n          .map(({ title, episode_id }) => (\n            <li className={style.list__item} key={episode_id}>\n              <span className={style.item__episode}>Episode {episode_id}</span>\n              <span className={style.item__colon}>:</span>\n              <span className={style.item__title}>{title}</span>\n            </li>\n          ))}\n      </ul>\n    </div>\n  );\n};\n// export default CharacterFilms;\n"],"names":["CharacterFilms","characterFilms","useState","filmsName","setFilmsName","useEffect","conCurrentFilms","className","style","sort","a","b","episode_id","map","title"],"sourceRoot":""}